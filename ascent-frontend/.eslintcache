[{"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/index.js":"1","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/ClimbCard.js":"2","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/SearchForm.js":"3","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/reducers/climbsReducer.js":"4","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/reportWebVitals.js":"5","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/App.js":"6","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/Footer.js":"7","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/NavBar.js":"8","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/actions/climbActions.js":"9","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/Home.js":"10","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/auth/LogIn.js":"11","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/auth/SignUp.js":"12","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Containers/MyClimbs.js":"13","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Containers/ClimbContainer.js":"14","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/Map.js":"15","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/Profile.js":"16","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/ProfileEdit.js":"17","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/Review.js":"18"},{"size":831,"mtime":1608053850086,"results":"19","hashOfConfig":"20"},{"size":9258,"mtime":1609984369674,"results":"21","hashOfConfig":"20"},{"size":2664,"mtime":1609986277924,"results":"22","hashOfConfig":"20"},{"size":1006,"mtime":1609723908672,"results":"23","hashOfConfig":"20"},{"size":362,"mtime":1607977207119,"results":"24","hashOfConfig":"20"},{"size":3544,"mtime":1610047029819,"results":"25","hashOfConfig":"20"},{"size":155,"mtime":1607978108988,"results":"26","hashOfConfig":"20"},{"size":1870,"mtime":1609780616792,"results":"27","hashOfConfig":"20"},{"size":2328,"mtime":1609739330362,"results":"28","hashOfConfig":"20"},{"size":4803,"mtime":1610047460839,"results":"29","hashOfConfig":"20"},{"size":1663,"mtime":1610047321697,"results":"30","hashOfConfig":"20"},{"size":1641,"mtime":1610047341848,"results":"31","hashOfConfig":"20"},{"size":1308,"mtime":1609724269252,"results":"32","hashOfConfig":"20"},{"size":992,"mtime":1608227469508,"results":"33","hashOfConfig":"20"},{"size":3153,"mtime":1609985850523,"results":"34","hashOfConfig":"20"},{"size":12779,"mtime":1610046713879,"results":"35","hashOfConfig":"20"},{"size":2324,"mtime":1609284108490,"results":"36","hashOfConfig":"20"},{"size":840,"mtime":1609739458382,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"5uqbeg",{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/index.js",[],["81","82"],"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/ClimbCard.js",["83","84","85"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport {deleteClimb, completeClimb} from '../actions/climbActions'\nimport Modal from 'react-modal'\nimport Review from './Review'\n\n\nclass ClimbCard extends React.Component{\n    state ={\n        climbAdded: false,\n        data: \"\",\n        completed: this.props.completed,\n        reviews: [],\n        reviewModalOpen: false,\n        reviewsModalOpen: false,\n        reviewDeleted: false,\n        reviewData: {\n            title: \"\",\n            stars: 1,\n            content: \"\",\n            author: localStorage.user_name,\n            author_id: parseInt(localStorage.user_id),\n            climb_name: this.props.name\n            \n        }\n    }\n\n    customStyles =()=> {\n        return {\n            content : {\n              top                   : '50%',\n              left                  : '50%',\n              right                 : 'auto',\n              bottom                : 'auto',\n              marginRight           : '-50%',\n              transform             : 'translate(-50%, -50%)'\n            } \n        }\n    }\n\n    addClickHandler = () => {\n        let data ={\n            user_id: localStorage.user_id,\n            climb_id: this.props.id\n        }\n        fetch('http://localhost:3000/user_climbs', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\",\n            },\n            body: JSON.stringify(data)\n        })\n        .then(() => {\n            this.setState({climbAdded: true})\n        })\n    }\n\n    deleteClickHandler = () => {\n        const userClimb = this.props.user_climbs.filter(user_climb => user_climb.user_id === parseInt(localStorage.user_id))\n        this.props.deleteClimb(userClimb)\n    }\n\n    completeClickHandler = () => {\n        const userClimb = this.props.user_climbs.filter(user_climb => user_climb.user_id === parseInt(localStorage.user_id))\n        this.props.completeClimb(userClimb)\n        this.setState({\n            completed: true\n        })\n    }\n\n    renderCompleteButton = () => {\n        if (this.props.completed !== undefined){\n            return (\n                <div>\n\n                    {this.state.completed ? <span class=\"check-mark\"style={{color: \"green\"}}><i class=\"fas fa-check-circle\"></i></span> : <span class=\"check-mark\"style={{color: \"black\"}}><i class=\"fas fa-check-circle\"></i></span>}\n                    <div className=\"btn-group\">\n                        <button className=\"drop-btn btn btn-sm dropdown-toggle caret-off\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            <i class=\"ellipsis fas fa-ellipsis-h\"></i>\n                        </button>\n                        <div className=\"dropdown-menu dropdown-menu-left\">\n                            {this.state.completed ? \"\" : \n                                <a onClick={this.completeClickHandler} id=\"complete-btn\" className=\"dropdown-item\">Mark Complete  <span className=\"dropdown-icon\">✅</span></a>\n                            }\n                            \n                            <a onClick={this.deleteClickHandler} className=\"dropdown-item\">Remove Climb  <span className=\"dropdown-icon\"> ❌</span></a>\n                        </div>\n                    </div>\n                    <br></br>\n                </div>\n            )\n        }else {\n            return (\n                <button onClick={this.addClickHandler} className=\"btn\">{this.state.climbAdded ? <i style={{color:\"red\"}} className=\"fas fa-heart\"></i> : <i className=\"far fa-heart\"></i>}</button>\n            )\n        }\n    }\n\n    openReviewModal = () => {\n        this.setState({reviewModalOpen: true})\n    }\n    closeReviewModal = () => {\n        this.setState({reviewModalOpen: false})\n    }\n\n    reviewChangeHandler = (event) => {\n        this.setState({\n            ...this.state,\n            reviewData: {\n                ...this.state.reviewData,\n                [event.target.name]: event.target.value\n            }\n        })\n    }\n\n    reviewSubmitHandler = (e) => {\n        e.preventDefault()\n        const userClimb = this.props.user_climbs.filter(user_climb => user_climb.user_id === parseInt(localStorage.user_id))\n        const data = {\n            ...this.state.reviewData,\n            user_climb_id: userClimb[0].id\n        }\n        fetch('http://localhost:3000/reviews', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\",\n            },\n            body: JSON.stringify(data)\n        })\n        .then( () => {\n            this.setState({reviewModalOpen: false})\n        })\n        .catch(errors => {\n            console.log(errors)\n        })\n    }\n\n    fetchReviewsAndRenderModal = () => {\n        fetch(`http://localhost:3000/climbs/${this.props.id}/reviews`)\n        .then(r => r.json())\n        .then(reviews => {\n            this.setState({\n                reviews: reviews,\n                reviewsModalOpen: true\n            })\n        })\n    }\n    closeReviewsModal = () => {\n        this.setState({\n            reviewsModalOpen: false\n        })\n    }\n\n    renderReviewsContainer = () => {\n        const reviews = this.state.reviews.filter(review => review !== null)\n        if (reviews.length === 0){\n            return <p>No reviews for this route..</p>\n        }\n        else {\n            return(\n                <>\n                    <h4>{this.props.name}</h4>\n                    <div className=\"container\">\n                        {reviews.map(review => <Review deleteReview={this.deleteReview}{...review}/>)}\n                    </div>\n                </>\n            )\n        }\n    }\n\n    deleteReview = (reviewId) => {\n        let reviews;\n        reviews = this.state.reviews.filter(review => review !== null && review.id !== reviewId)\n        fetch(`http://localhost:3000/reviews/${reviewId}`, {\n            method: \"DELETE\"\n        })\n        .then(() => {\n            this.setState({\n                ...this.state,\n                reviews: reviews\n            })\n        })\n    }\n    \n    render(){\n        return(\n            <>\n            <div className=\"climb-card card float-left\">\n                <img className=\"card-img-top climb-img\" src={this.props.image}></img>\n                <div className=\"card-body climb-card-body\">\n                    <a href={this.props.url}><h4 className=\"card-title\">{this.props.name}</h4></a>\n                    <h5 className=\"rating\">Rating: <strong>{this.props.rating} ★</strong></h5>\n                    <p>Type: {this.props.climb_type}</p>\n                    <p>Difficulty: {this.props.difficulty}</p>\n                    <p>Location: {this.props.state}, {this.props.climbing_area}</p>\n                    <div className=\"card-img-overlay card-buttons\">\n                        {this.renderCompleteButton()}\n\n\n                        {this.state.completed ? <button onClick={this.openReviewModal} id=\"review-btn\" className=\"btn card-btn\">Add Review  <i className=\"far fa-edit\"></i></button> : \"\"}\n                    </div>\n                    <button onClick={this.fetchReviewsAndRenderModal} className=\"btn card-btn\">Reviews</button>\n                </div>\n            </div>\n            <Modal isOpen={this.state.reviewsModalOpen} style={this.customStyles()}>\n                <button className=\"btn\" onClick = {this.closeReviewsModal}>X</button>\n                {this.renderReviewsContainer()}\n            </Modal>\n\n\n            <Modal isOpen= {this.state.reviewModalOpen} style={this.customStyles()}>\n                <button className=\"btn\" onClick = {this.closeReviewModal}>X</button>\n                <form onSubmit={this.reviewSubmitHandler}>\n                    <div className=\"form-group\">\n                        <h5>Review for <strong>{this.props.name}</strong></h5>\n                        <label>Rating: </label>\n                        <select onChange={this.reviewChangeHandler} value={this.state.reviewData.stars} name=\"stars\">\n                            <option value=\"1\" >1</option>\n                            <option value=\"2\" >2</option>\n                            <option value=\"3\" >3</option>\n                            <option value=\"4\" >4</option>\n                            <option value=\"5\" >5</option>\n                        </select>\n                        <br></br>\n    \n                        <label>Title: </label>\n                        <input className=\"form-control\" onChange={this.reviewChangeHandler} value={this.state.reviewData.title} name=\"title\"></input>\n                        <label>Description: </label>\n                        <textarea className=\"form-control\" onChange={this.reviewChangeHandler} value={this.state.reviewData.content} name=\"content\"></textarea>\n                        <br></br>\n                        <input type=\"submit\"></input>\n                    </div>\n                </form>\n            </Modal>\n            </>\n        )\n    }\n}\n\nconst mdp = dispatch => {\n    return {\n        deleteClimb: userClimb => dispatch(deleteClimb(userClimb)),\n        completeClimb: userClimb => dispatch(completeClimb(userClimb)),\n    }\n}\n\n\nexport default connect(null,mdp)(ClimbCard);","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/SearchForm.js",[],"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/reducers/climbsReducer.js",["86"],"const climbsReducer = (state = {climbs: [], my_climbs: [], loading: false}, action) => {\n    switch(action.type){\n        case \"LOADING_CLIMBS\":\n            return {\n                ...state,\n                climbs: [...state.climbs],\n                loading: true\n            }\n        case \"ADD_CLIMBS\": \n            return {\n                ...state,\n                climbs: action.climbs,\n                loading: false\n            }\n        case \"ADD_MY_CLIMBS\":\n            return {\n                ...state,\n                my_climbs: action.my_climbs\n            }\n\n        case \"DELETE_CLIMB\":\n            let newClimbArray = state.my_climbs.filter(climb => climb.id != action.climb_id)\n\n            return {\n                ...state,\n                my_climbs: newClimbArray\n            }\n        case \"ADD_USER\":\n            return {\n                ...state,\n                currentUser: action.user\n            }\n        case \"ADD_REVIEWS\":\n            return {\n                ...state,\n                currentClimbReviews: action.reviews\n            }\n\n        default:\n            return state\n    }\n}\nexport default climbsReducer;","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/reportWebVitals.js",[],"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/App.js",["87"],"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/Footer.js",[],["88","89"],"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/NavBar.js",["90","91"],"import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport logo from '../assets/logo.png'\n\n\nexport default class NavBar extends React.Component{\n    render(){\n        return(\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark shadow sticky-top\">\n                <img className=\"ascent-logo\" src={logo}></img>\n                <a className=\"navbar-nav ascent-text\">\n                    <NavLink to=\"/\" className=\"nav-link\">Ascent</NavLink>\n                </a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item\">\n                            <NavLink to=\"/profile\" className=\"nav-link\">{localStorage.user_username}</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink className=\"nav-link\" to=\"/search\">Search</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink className=\"nav-link\" to=\"/climbs\">All Climbs</NavLink>\n                        </li>\n                        \n                        <li className=\"nav-item\">\n                            <NavLink className=\"nav-link\" to=\"/map\">Map</NavLink>\n                        </li>\n                        <li className=\"nav-item logout\">\n                            <a className=\"nav-link\" href=\"/logout\">Logout</a>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        )\n    }\n}","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/actions/climbActions.js",[],"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/Home.js",["92","93","94"],"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/auth/LogIn.js",[],"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/auth/SignUp.js",[],"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Containers/MyClimbs.js",["95"],"import React from 'react'\nimport { useSelector } from 'react-redux'\nimport ClimbCard from '../Components/ClimbCard'\nimport {connect} from 'react-redux'\nimport {fetchMyClimbs} from '../actions/climbActions'\n\nclass MyClimbs extends React.Component{\n    state= {\n        render: false\n    }\n\n    componentDidMount(){\n        this.props.fetchMyClimbs(localStorage.user_id)\n    }\n\n    renderClimbs = () => {\n        let climbArray = this.props.my_climbs.map(climb => {\n            let user_climb = climb.user_climbs.filter(user_climb => user_climb.user_id === parseInt(localStorage.user_id))\n            return <ClimbCard\n                key = {climb.id} \n                token ={this.props.token} \n                user={this.props.user} {...climb} \n                completed={user_climb[0].completed}\n            />\n        })\n        return climbArray\n        \n\n    }\n    render(){\n        return(\n            <div className=\"container\">\n                <h1>My Climbs</h1>\n                <hr></hr>\n                {this.renderClimbs()}\n            </div>\n        )\n    }\n}\n\nconst msp = state => {\n    return{\n        my_climbs: state.my_climbs\n    }\n}\n\nconst mdp = dispatch => {\n    return {\n        fetchMyClimbs: user_id => dispatch(fetchMyClimbs(user_id))\n    }\n}\n\nexport default connect(msp,mdp)(MyClimbs);","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Containers/ClimbContainer.js",[],"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/Map.js",["96"],"import React, {useState} from 'react'\nimport { useSelector } from 'react-redux'\nimport {GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow} from 'react-google-maps'\nimport {connect} from 'react-redux'\nimport {fetchClimbs} from '../actions/climbActions'\n\n\n\nfunction BasicMap(){\n    const climbs = useSelector(state => state.climbs)\n    const [selectedClimb, setSelectedClimb]= useState(null);\n    const clickHandler = () => {\n        let data ={\n            user_id: localStorage.user_id,\n            climb_id: selectedClimb.id\n        }\n        fetch('http://localhost:3000/user_climbs', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\",\n            },\n            body: JSON.stringify(data)\n        })\n    }\n    return (\n        <GoogleMap defaultZoom={8} defaultCenter={{lat:40.678177, lng:-73.944160  }}>\n            {climbs.map(climb => \n                <Marker \n                    key={climb.id} \n                    position={{lat: climb.lat, lng: climb.long}}\n                    onClick={() => {setSelectedClimb(climb)}}\n                />\n            )}\n            {selectedClimb && (\n                <InfoWindow \n                    position={{lat: selectedClimb.lat, lng: selectedClimb.long}}\n                    onCloseClick={ () => {\n                        setSelectedClimb(null);\n                    }}\n                >\n                    <div>\n                        <img className=\"map-img\" src={selectedClimb.image}></img>\n                        <hr></hr>\n                        <h6><a href={selectedClimb.url}>{selectedClimb.name}</a> <span>({selectedClimb.difficulty})</span></h6>\n                        <p>{selectedClimb.climb_type}</p>\n                        <p>Rating: &#9733;<strong>{selectedClimb.rating}</strong></p>\n                        <p>{selectedClimb.state}, {selectedClimb.climbing_area}</p>\n                        <button onClick={clickHandler}>Add to MyClimbs</button>\n                    </div>\n                </InfoWindow>\n            )}\n        </GoogleMap>\n    )\n}\n\n\nconst WrappedMap = withScriptjs(withGoogleMap(BasicMap))\n\nclass Map extends React.Component{\n    // const climbs = useSelector(state => state)\n    componentDidMount(){\n        this.props.fetchClimbs()\n    }\n    render(){\n        return(\n            <div style={{witdth: '100vw', height: '100vh'}}>\n                <WrappedMap \n                    googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_KEY}`}\n                    loadingElement = {<div style={{height: '100%'}}></div>}\n                    containerElement = {<div style={{height: '100%'}}></div>}\n                    mapElement = {<div style={{height: '100%'}}></div>}\n                />\n            </div>\n        )\n    }\n    }\n\nconst msp = state => {\n    return {\n        climbs: state.climbs,\n        loading: state.loading\n    }\n}\n\nconst mdp = dispatch => {\n    return {\n        fetchClimbs: () => dispatch(fetchClimbs())\n    }\n}\n\n\nexport default connect(msp,mdp)(Map,BasicMap);","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/Profile.js",["97"],"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/ProfileEdit.js",[],"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/Review.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":84,"column":33,"nodeType":"104","endLine":84,"endColumn":116},{"ruleId":"102","severity":1,"message":"103","line":87,"column":29,"nodeType":"104","endLine":87,"endColumn":92},{"ruleId":"105","severity":1,"message":"106","line":191,"column":17,"nodeType":"104","endLine":191,"endColumn":80},{"ruleId":"107","severity":1,"message":"108","line":22,"column":74,"nodeType":"109","messageId":"110","endLine":22,"endColumn":76},{"ruleId":"111","severity":1,"message":"112","line":7,"column":27,"nodeType":"113","messageId":"114","endLine":7,"endColumn":33},{"ruleId":"98","replacedBy":"115"},{"ruleId":"100","replacedBy":"116"},{"ruleId":"105","severity":1,"message":"106","line":10,"column":17,"nodeType":"104","endLine":10,"endColumn":57},{"ruleId":"102","severity":1,"message":"103","line":11,"column":17,"nodeType":"104","endLine":11,"endColumn":55},{"ruleId":"111","severity":1,"message":"117","line":6,"column":8,"nodeType":"113","messageId":"114","endLine":6,"endColumn":13},{"ruleId":"105","severity":1,"message":"106","line":62,"column":29,"nodeType":"104","endLine":65,"endColumn":31},{"ruleId":"118","severity":1,"message":"119","line":144,"column":1,"nodeType":"120","messageId":"110","endLine":146,"endColumn":4},{"ruleId":"111","severity":1,"message":"121","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":21},{"ruleId":"105","severity":1,"message":"106","line":43,"column":25,"nodeType":"104","endLine":43,"endColumn":76},{"ruleId":"105","severity":1,"message":"106","line":62,"column":21,"nodeType":"104","endLine":62,"endColumn":9649},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar",["122"],["123"],"'LogIn' is defined but never used.","no-extend-native","Array prototype is read only, properties should not be added.","AssignmentExpression","'useSelector' is defined but never used.","no-global-assign","no-unsafe-negation"]