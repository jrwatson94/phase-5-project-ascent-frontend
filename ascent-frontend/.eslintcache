[{"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/index.js":"1","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/ClimbCard.js":"2","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/SearchForm.js":"3","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/reducers/climbsReducer.js":"4","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/reportWebVitals.js":"5","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/App.js":"6","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/Footer.js":"7","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/NavBar.js":"8","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/actions/climbActions.js":"9","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/Home.js":"10","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/auth/LogIn.js":"11","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/auth/SignUp.js":"12","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Containers/MyClimbs.js":"13","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Containers/ClimbContainer.js":"14","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/Map.js":"15"},{"size":831,"mtime":1608053850086,"results":"16","hashOfConfig":"17"},{"size":2612,"mtime":1608601485449,"results":"18","hashOfConfig":"17"},{"size":2498,"mtime":1608506586812,"results":"19","hashOfConfig":"17"},{"size":879,"mtime":1608503134677,"results":"20","hashOfConfig":"17"},{"size":362,"mtime":1607977207119,"results":"21","hashOfConfig":"17"},{"size":2444,"mtime":1608583793181,"results":"22","hashOfConfig":"17"},{"size":155,"mtime":1607978108988,"results":"23","hashOfConfig":"17"},{"size":1781,"mtime":1608524078152,"results":"24","hashOfConfig":"17"},{"size":1432,"mtime":1608504389557,"results":"25","hashOfConfig":"17"},{"size":652,"mtime":1608059597870,"results":"26","hashOfConfig":"17"},{"size":1321,"mtime":1608052943062,"results":"27","hashOfConfig":"17"},{"size":1489,"mtime":1608070451784,"results":"28","hashOfConfig":"17"},{"size":1250,"mtime":1608582128186,"results":"29","hashOfConfig":"17"},{"size":992,"mtime":1608227469508,"results":"30","hashOfConfig":"17"},{"size":3152,"mtime":1608589512971,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"5uqbeg",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"34"},"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/index.js",[],["70","71"],"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/ClimbCard.js",["72"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport {deleteClimb, completeClimb} from '../actions/climbActions'\n\n\nclass ClimbCard extends React.Component{\n    state ={\n        data: \"\",\n        completed: this.props.completed\n    }\n\n    addClickHandler = () => {\n        let data ={\n            user_id: localStorage.user_id,\n            climb_id: this.props.id\n        }\n        fetch('http://localhost:3000/user_climbs', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\",\n            },\n            body: JSON.stringify(data)\n        })\n    }\n\n    deleteClickHandler = () => {\n        const userClimb = this.props.user_climbs.filter(user_climb => user_climb.user_id === parseInt(localStorage.user_id))\n        this.props.deleteClimb(userClimb)\n    }\n\n    completeClickHandler = () => {\n        const userClimb = this.props.user_climbs.filter(user_climb => user_climb.user_id === parseInt(localStorage.user_id))\n        this.props.completeClimb(userClimb)\n        this.setState({\n            completed: true\n        })\n    }\n\n    renderCompleteButton = () => {\n        if (this.props.completed !== undefined){\n            return (\n                <>\n                <button onClick={this.deleteClickHandler} className=\"btn\">Delete</button>\n                <button onClick={this.completeClickHandler} className=\"btn\">{this.state.completed ? \"Complete âœ…\" : \"Mark as Complete\"}</button>\n                </>\n            )\n        }\n    }\n\n    render(){\n        return(\n            <div className=\"climb-card card float-right\">\n                <img className=\"card-img-top climb-img\" src={this.props.image}></img>\n                <div className=\"card-body\">\n                    <a href={this.props.url}><h4 className=\"card-title\">{this.props.name}</h4></a>\n                    <h5 className=\"rating\">Rating: <strong>{this.props.rating}</strong></h5>\n                    <p>Type: {this.props.climb_type}</p>\n                    <p>Difficulty: {this.props.difficulty}</p>\n                    <p>Location: {this.props.state}, {this.props.climbing_area}</p>\n                    <button onClick={this.addClickHandler} className=\"btn\">Add To MyClimbs</button>\n                    {this.renderCompleteButton()}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mdp = dispatch => {\n    return {\n        deleteClimb: userClimb => dispatch(deleteClimb(userClimb)),\n        completeClimb: userClimb => dispatch(completeClimb(userClimb))\n    }\n}\n\n\nexport default connect(null,mdp)(ClimbCard);","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/SearchForm.js",[],"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/reducers/climbsReducer.js",["73"],"const climbsReducer = (state = {climbs: [], my_climbs: [], loading: false}, action) => {\n    switch(action.type){\n        case \"LOADING_CLIMBS\":\n            return {\n                ...state,\n                climbs: [...state.climbs],\n                loading: true\n            }\n        case \"ADD_CLIMBS\": \n            return {\n                ...state,\n                climbs: action.climbs,\n                loading: false\n            }\n        case \"ADD_MY_CLIMBS\":\n            return {\n                ...state,\n                my_climbs: action.my_climbs\n            }\n\n        case \"DELETE_CLIMB\":\n            let newClimbArray = state.my_climbs.filter(climb => climb.id != action.climb_id)\n\n            return {\n                ...state,\n                my_climbs: newClimbArray\n            }\n\n        default:\n            return state\n    }\n}\nexport default climbsReducer;","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/reportWebVitals.js",[],"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/App.js",["74","75"],"import './App.css';\nimport React from 'react'\nimport NavBar from './Components/NavBar'\nimport ClimbContainer from './Containers/ClimbContainer'\nimport SearchForm from './Components/SearchForm'\nimport Footer from './Components/Footer'\nimport Home from './Components/Home'\nimport { BrowserRouter as Router, Route , Switch, withRouter} from 'react-router-dom'\nimport Signup from './auth/SignUp'\nimport Login from './auth/LogIn'\nimport MyClimbs from './Containers/MyClimbs'\nimport Map from './Components/Map'\n\n\n\n\nclass App extends React.Component{\n  state = {\n    user: null \n  }\n  signupSubmitHandler = (newUser) => {\n    console.log(newUser)\n    fetch('http://localhost:3000/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n  \n      },\n      body: JSON.stringify(newUser)\n      })\n      .then(r => r.json())\n      .then(newUserObj => {\n        this.setState({user:newUserObj.user}\n          , () => this.props.history.push('/climbs'))\n        localStorage.setItem(\"token\", newUserObj.jwt)\n  \n      });\n  }\n  \n  loginHandler = (userLogin) => {\n    fetch('http://localhost:3000/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      },\n      body: JSON.stringify(userLogin)\n      })\n      .then(r => r.json())\n      .then(loggedInUser => {\n        localStorage.setItem(\"token\", loggedInUser.jwt)\n        localStorage.setItem(\"user_id\",loggedInUser.user.id)\n        this.setState({user:loggedInUser.user}\n          , () => this.props.history.push('/climbs')\n          )\n      })\n  }\n  render(){\n    return(\n      <Switch>\n        <div>\n          <NavBar/>\n          <Route exact path=\"/signup\"render={() => <Signup submitHandler = {this.signupSubmitHandler}/>}/>\n          <Route exact path=\"/login\" render={() => <Login loginHandler = {this.loginHandler}/>}/>\n          <Route exact path=\"/\" component={Home}/>\n          <Route exact path=\"/search\" render={() => <SearchForm user={this.state.user}/>}/>\n          <Route exact path=\"/climbs\" render= {() => <ClimbContainer token={localStorage.token} user={this.state.user}/>} />\n          <Route exact path=\"/my-climbs\"render={() => <MyClimbs token={localStorage.token} user= {this.state.user}/>}/>\n          <Route exact path=\"/map\" component={Map}/>\n        </div>\n      </Switch>\n      \n    )\n  }\n}\n\n\nexport default withRouter(App)\n","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/Footer.js",[],"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/NavBar.js",["76"],"import React from 'react'\nimport {NavLink} from 'react-router-dom'\n\n\nexport default class NavBar extends React.Component{\n    render(){\n        return(\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                <a className=\"navbar-brand\" href=\"#\">Ascent</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item\">\n                            <NavLink to=\"/\" className=\"nav-link\" href=\"#\">Home</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink className=\"nav-link\" to=\"/search\">Search</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink className=\"nav-link\" to=\"/climbs\">All Climbs</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink className=\"nav-link\" to=\"/my-climbs\">My Climbs</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink className=\"nav-link\" to=\"/map\">Map</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"/\">Logout</a>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        )\n    }\n}","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/actions/climbActions.js",[],["77","78"],"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/Home.js",[],"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/auth/LogIn.js",[],"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/auth/SignUp.js",[],"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Containers/MyClimbs.js",["79","80"],"import React from 'react'\nimport { useSelector } from 'react-redux'\nimport ClimbCard from '../Components/ClimbCard'\nimport {connect} from 'react-redux'\nimport {fetchMyClimbs} from '../actions/climbActions'\n\nclass MyClimbs extends React.Component{\n    state= {\n        render: false\n    }\n\n    componentDidMount(){\n        this.props.fetchMyClimbs(localStorage.user_id)\n    }\n\n    renderClimbs = () => {\n        let climbArray = this.props.my_climbs.map(climb => {\n            if (climb.user_climbs){\n                let user_climb = climb.user_climbs.filter(user_climb => user_climb.user_id === parseInt(localStorage.user_id))\n                return <ClimbCard \n                    token ={this.props.token} \n                    user={this.props.user} {...climb} \n                    completed={user_climb[0].completed} \n                />\n            }\n        })\n        return climbArray\n        \n\n    }\n    render(){\n        return(\n            <div className=\"container\">\n                <h1>My Climbs</h1>\n                {this.renderClimbs()}\n            </div>\n        )\n    }\n}\n\nconst msp = state => {\n    return{\n        my_climbs: state.my_climbs\n    }\n}\n\nconst mdp = dispatch => {\n    return {\n        fetchMyClimbs: user_id => dispatch(fetchMyClimbs(user_id))\n    }\n}\n\nexport default connect(msp,mdp)(MyClimbs);","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Containers/ClimbContainer.js",[],"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/Map.js",["81"],"import React, {useState} from 'react'\nimport { useSelector } from 'react-redux'\nimport {GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow} from 'react-google-maps'\nimport {connect} from 'react-redux'\nimport {fetchClimbs} from '../actions/climbActions'\n\n\n\nfunction BasicMap(){\n    const climbs = useSelector(state => state.climbs)\n    const [selectedClimb, setSelectedClimb]= useState(null);\n    const clickHandler = () => {\n        let data ={\n            user_id: localStorage.user_id,\n            climb_id: selectedClimb.id\n        }\n        fetch('http://localhost:3000/user_climbs', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\",\n            },\n            body: JSON.stringify(data)\n        })\n    }\n    return (\n        <GoogleMap defaultZoom={8} defaultCenter={{lat:40.678177, lng:-73.944160  }}>\n            {climbs.map(climb => \n                <Marker \n                    key={climb.id} \n                    position={{lat: climb.lat, lng: climb.long}}\n                    onClick={() => {setSelectedClimb(climb)}}\n                />\n            )}\n            {selectedClimb && (\n                <InfoWindow \n                    position={{lat: selectedClimb.lat, lng:selectedClimb.long}}\n                    onCloseClick={ () => {\n                        setSelectedClimb(null);\n                    }}\n                >\n                    <div>\n                        <img className=\"map-img\" src={selectedClimb.image}></img>\n                        <hr></hr>\n                        <h6><a href={selectedClimb.url}>{selectedClimb.name}</a> <span>({selectedClimb.difficulty})</span></h6>\n                        <p>{selectedClimb.climb_type}</p>\n                        <p>Rating: &#9733;<strong>{selectedClimb.rating}</strong></p>\n                        <p>{selectedClimb.state}, {selectedClimb.climbing_area}</p>\n                        <button onClick={clickHandler}>Add to MyClimbs</button>\n                    </div>\n                </InfoWindow>\n            )}\n        </GoogleMap>\n    )\n}\n\n\nconst WrappedMap = withScriptjs(withGoogleMap(BasicMap))\n\nclass Map extends React.Component{\n    // const climbs = useSelector(state => state)\n    componentDidMount(){\n        this.props.fetchClimbs()\n    }\n    render(){\n        return(\n            <div style={{witdth: '100vw', height: '100vh'}}>\n                <WrappedMap \n                    googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_KEY}`}\n                    loadingElement = {<div style={{height: '100%'}}></div>}\n                    containerElement = {<div style={{height: '100%'}}></div>}\n                    mapElement = {<div style={{height: '100%'}}></div>}\n                />\n            </div>\n        )\n    }\n    }\n\nconst msp = state => {\n    return {\n        climbs: state.climbs,\n        loading: state.loading\n    }\n}\n\nconst mdp = dispatch => {\n    return {\n        fetchClimbs: () => dispatch(fetchClimbs())\n    }\n}\n\n\nexport default connect(msp,mdp)(Map,BasicMap);",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":54,"column":17,"nodeType":"88","endLine":54,"endColumn":80},{"ruleId":"89","severity":1,"message":"90","line":22,"column":74,"nodeType":"91","messageId":"92","endLine":22,"endColumn":76},{"ruleId":"93","severity":1,"message":"94","line":6,"column":8,"nodeType":"95","messageId":"96","endLine":6,"endColumn":14},{"ruleId":"93","severity":1,"message":"97","line":8,"column":27,"nodeType":"95","messageId":"96","endLine":8,"endColumn":33},{"ruleId":"98","severity":1,"message":"99","line":9,"column":17,"nodeType":"88","endLine":9,"endColumn":54},{"ruleId":"82","replacedBy":"100"},{"ruleId":"84","replacedBy":"101"},{"ruleId":"93","severity":1,"message":"102","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":21},{"ruleId":"103","severity":1,"message":"104","line":17,"column":57,"nodeType":"105","messageId":"106","endLine":17,"endColumn":59},{"ruleId":"86","severity":1,"message":"87","line":43,"column":25,"nodeType":"88","endLine":43,"endColumn":76},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["107"],["108"],"'useSelector' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]