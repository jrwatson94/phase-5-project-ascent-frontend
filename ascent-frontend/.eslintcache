[{"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/index.js":"1","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/ClimbCard.js":"2","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/SearchForm.js":"3","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/reducers/climbsReducer.js":"4","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/reportWebVitals.js":"5","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/App.js":"6","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/Footer.js":"7","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/NavBar.js":"8","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/actions/climbActions.js":"9","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/Home.js":"10","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/auth/LogIn.js":"11","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/auth/SignUp.js":"12","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Containers/MyClimbs.js":"13","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Containers/ClimbContainer.js":"14","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/Map.js":"15","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/Profile.js":"16"},{"size":831,"mtime":1608053850086,"results":"17","hashOfConfig":"18"},{"size":2611,"mtime":1608668571078,"results":"19","hashOfConfig":"18"},{"size":2498,"mtime":1608506586812,"results":"20","hashOfConfig":"18"},{"size":1006,"mtime":1608673562778,"results":"21","hashOfConfig":"18"},{"size":362,"mtime":1607977207119,"results":"22","hashOfConfig":"18"},{"size":3478,"mtime":1608677648909,"results":"23","hashOfConfig":"18"},{"size":155,"mtime":1607978108988,"results":"24","hashOfConfig":"18"},{"size":1948,"mtime":1608669369510,"results":"25","hashOfConfig":"18"},{"size":2410,"mtime":1608675608300,"results":"26","hashOfConfig":"18"},{"size":998,"mtime":1608677477373,"results":"27","hashOfConfig":"18"},{"size":1473,"mtime":1608677601493,"results":"28","hashOfConfig":"18"},{"size":1457,"mtime":1608668620903,"results":"29","hashOfConfig":"18"},{"size":1283,"mtime":1608668359796,"results":"30","hashOfConfig":"18"},{"size":992,"mtime":1608227469508,"results":"31","hashOfConfig":"18"},{"size":3152,"mtime":1608589512971,"results":"32","hashOfConfig":"18"},{"size":2702,"mtime":1608676692314,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"5uqbeg",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/index.js",[],["71","72"],"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/ClimbCard.js",["73"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport {deleteClimb, completeClimb} from '../actions/climbActions'\n\n\nclass ClimbCard extends React.Component{\n    state ={\n        data: \"\",\n        completed: this.props.completed\n    }\n\n    addClickHandler = () => {\n        let data ={\n            user_id: localStorage.user_id,\n            climb_id: this.props.id\n        }\n        fetch('http://localhost:3000/user_climbs', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\",\n            },\n            body: JSON.stringify(data)\n        })\n    }\n\n    deleteClickHandler = () => {\n        const userClimb = this.props.user_climbs.filter(user_climb => user_climb.user_id === parseInt(localStorage.user_id))\n        this.props.deleteClimb(userClimb)\n    }\n\n    completeClickHandler = () => {\n        const userClimb = this.props.user_climbs.filter(user_climb => user_climb.user_id === parseInt(localStorage.user_id))\n        this.props.completeClimb(userClimb)\n        this.setState({\n            completed: true\n        })\n    }\n\n    renderCompleteButton = () => {\n        if (this.props.completed !== undefined){\n            return (\n                <>\n                <button onClick={this.deleteClickHandler} className=\"btn\">Delete</button>\n                <button onClick={this.completeClickHandler} className=\"btn\">{this.state.completed ? \"Complete âœ…\" : \"Mark as Complete\"}</button>\n                </>\n            )\n        }\n    }\n\n    render(){\n        return(\n            <div className=\"climb-card card float-left\">\n                <img className=\"card-img-top climb-img\" src={this.props.image}></img>\n                <div className=\"card-body\">\n                    <a href={this.props.url}><h4 className=\"card-title\">{this.props.name}</h4></a>\n                    <h5 className=\"rating\">Rating: <strong>{this.props.rating}</strong></h5>\n                    <p>Type: {this.props.climb_type}</p>\n                    <p>Difficulty: {this.props.difficulty}</p>\n                    <p>Location: {this.props.state}, {this.props.climbing_area}</p>\n                    <button onClick={this.addClickHandler} className=\"btn\">Add To MyClimbs</button>\n                    {this.renderCompleteButton()}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mdp = dispatch => {\n    return {\n        deleteClimb: userClimb => dispatch(deleteClimb(userClimb)),\n        completeClimb: userClimb => dispatch(completeClimb(userClimb))\n    }\n}\n\n\nexport default connect(null,mdp)(ClimbCard);","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/SearchForm.js",[],"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/reducers/climbsReducer.js",["74"],"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/reportWebVitals.js",[],"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/App.js",["75","76"],"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/Footer.js",[],"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/NavBar.js",["77"],"import React from 'react'\nimport {NavLink} from 'react-router-dom'\n\n\nexport default class NavBar extends React.Component{\n    render(){\n        return(\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                <a className=\"navbar-brand\" href=\"#\">Ascent</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item\">\n                            <NavLink to=\"/\" className=\"nav-link\">Home</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink to=\"/profile\" className=\"nav-link\">Profile</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink className=\"nav-link\" to=\"/search\">Search</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink className=\"nav-link\" to=\"/climbs\">All Climbs</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink className=\"nav-link\" to=\"/my-climbs\">My Climbs</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink className=\"nav-link\" to=\"/map\">Map</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"/logout\">Logout</a>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        )\n    }\n}","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/actions/climbActions.js",[],"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/Home.js",[],"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/auth/LogIn.js",[],"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/auth/SignUp.js",[],"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Containers/MyClimbs.js",["78"],"import React from 'react'\nimport { useSelector } from 'react-redux'\nimport ClimbCard from '../Components/ClimbCard'\nimport {connect} from 'react-redux'\nimport {fetchMyClimbs} from '../actions/climbActions'\n\nclass MyClimbs extends React.Component{\n    state= {\n        render: false\n    }\n\n    componentDidMount(){\n        this.props.fetchMyClimbs(localStorage.user_id)\n    }\n\n    renderClimbs = () => {\n        let climbArray = this.props.my_climbs.map(climb => {\n            let user_climb = climb.user_climbs.filter(user_climb => user_climb.user_id === parseInt(localStorage.user_id))\n            return <ClimbCard\n                key = {climb.id} \n                token ={this.props.token} \n                user={this.props.user} {...climb} \n                completed={user_climb[0].completed} \n            />\n        })\n        return climbArray\n        \n\n    }\n    render(){\n        return(\n            <div className=\"container\">\n                <h1>My Climbs</h1>\n                {this.renderClimbs()}\n            </div>\n        )\n    }\n}\n\nconst msp = state => {\n    return{\n        my_climbs: state.my_climbs\n    }\n}\n\nconst mdp = dispatch => {\n    return {\n        fetchMyClimbs: user_id => dispatch(fetchMyClimbs(user_id))\n    }\n}\n\nexport default connect(msp,mdp)(MyClimbs);","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Containers/ClimbContainer.js",[],"/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/Map.js",["79"],"import React, {useState} from 'react'\nimport { useSelector } from 'react-redux'\nimport {GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow} from 'react-google-maps'\nimport {connect} from 'react-redux'\nimport {fetchClimbs} from '../actions/climbActions'\n\n\n\nfunction BasicMap(){\n    const climbs = useSelector(state => state.climbs)\n    const [selectedClimb, setSelectedClimb]= useState(null);\n    const clickHandler = () => {\n        let data ={\n            user_id: localStorage.user_id,\n            climb_id: selectedClimb.id\n        }\n        fetch('http://localhost:3000/user_climbs', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\",\n            },\n            body: JSON.stringify(data)\n        })\n    }\n    return (\n        <GoogleMap defaultZoom={8} defaultCenter={{lat:40.678177, lng:-73.944160  }}>\n            {climbs.map(climb => \n                <Marker \n                    key={climb.id} \n                    position={{lat: climb.lat, lng: climb.long}}\n                    onClick={() => {setSelectedClimb(climb)}}\n                />\n            )}\n            {selectedClimb && (\n                <InfoWindow \n                    position={{lat: selectedClimb.lat, lng:selectedClimb.long}}\n                    onCloseClick={ () => {\n                        setSelectedClimb(null);\n                    }}\n                >\n                    <div>\n                        <img className=\"map-img\" src={selectedClimb.image}></img>\n                        <hr></hr>\n                        <h6><a href={selectedClimb.url}>{selectedClimb.name}</a> <span>({selectedClimb.difficulty})</span></h6>\n                        <p>{selectedClimb.climb_type}</p>\n                        <p>Rating: &#9733;<strong>{selectedClimb.rating}</strong></p>\n                        <p>{selectedClimb.state}, {selectedClimb.climbing_area}</p>\n                        <button onClick={clickHandler}>Add to MyClimbs</button>\n                    </div>\n                </InfoWindow>\n            )}\n        </GoogleMap>\n    )\n}\n\n\nconst WrappedMap = withScriptjs(withGoogleMap(BasicMap))\n\nclass Map extends React.Component{\n    // const climbs = useSelector(state => state)\n    componentDidMount(){\n        this.props.fetchClimbs()\n    }\n    render(){\n        return(\n            <div style={{witdth: '100vw', height: '100vh'}}>\n                <WrappedMap \n                    googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_KEY}`}\n                    loadingElement = {<div style={{height: '100%'}}></div>}\n                    containerElement = {<div style={{height: '100%'}}></div>}\n                    mapElement = {<div style={{height: '100%'}}></div>}\n                />\n            </div>\n        )\n    }\n    }\n\nconst msp = state => {\n    return {\n        climbs: state.climbs,\n        loading: state.loading\n    }\n}\n\nconst mdp = dispatch => {\n    return {\n        fetchClimbs: () => dispatch(fetchClimbs())\n    }\n}\n\n\nexport default connect(msp,mdp)(Map,BasicMap);","/Users/reid/Development/code/Mod5/phase-5-project-ascent/phase-5-project-ascent-frontend/ascent-frontend/src/Components/Profile.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":54,"column":17,"nodeType":"86","endLine":54,"endColumn":80},{"ruleId":"87","severity":1,"message":"88","line":22,"column":74,"nodeType":"89","messageId":"90","endLine":22,"endColumn":76},{"ruleId":"91","severity":1,"message":"92","line":6,"column":8,"nodeType":"93","messageId":"94","endLine":6,"endColumn":14},{"ruleId":"91","severity":1,"message":"95","line":8,"column":27,"nodeType":"93","messageId":"94","endLine":8,"endColumn":33},{"ruleId":"96","severity":1,"message":"97","line":9,"column":17,"nodeType":"86","endLine":9,"endColumn":54},{"ruleId":"91","severity":1,"message":"98","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":21},{"ruleId":"84","severity":1,"message":"85","line":43,"column":25,"nodeType":"86","endLine":43,"endColumn":76},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useSelector' is defined but never used.","no-global-assign","no-unsafe-negation"]